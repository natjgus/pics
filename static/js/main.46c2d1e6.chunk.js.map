{"version":3,"sources":["components/SearchBar.js","components/ImageCard.js","components/ImageList.js","api/unsplash.js","components/App.js","index.js"],"names":["SearchBar","state","term","onFormSubmit","event","preventDefault","_this","props","onSubmit","_this2","this","react_default","a","createElement","className","type","value","onChange","e","setState","target","React","Component","ImageCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","console","log","createRef","addEventListener","_this$props$image","image","description","urls","style","gridRowEnd","concat","ref","alt","src","regular","ImageList","images","map","components_ImageCard","key","id","axios","create","baseURL","headers","Authorization","App","onSearchSubmit","_callee","response","regenerator_default","wrap","_context","prev","next","unsplash","get","params","query","sent","data","results","stop","marginTop","components_SearchBar","src_components_ImageList","ReactDOM","render","components_App","document","querySelector"],"mappings":"yPA6BeA,6MA1BbC,MAAQ,CAAEC,KAAM,MAEhBC,aAAe,SAAAC,GACXA,EAAMC,iBAENC,EAAKC,MAAMC,SAASF,EAAKL,MAAMC,+EAG1B,IAAAO,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAML,SAAUE,KAAKP,aAAcW,UAAU,WAC3CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACEE,KAAK,OACLC,MAAON,KAAKT,MAAMC,KAClBe,SAAU,SAAAC,GAAC,OAAIT,EAAKU,SAAS,CAAEjB,KAAMgB,EAAEE,OAAOJ,qBAlBpCK,IAAMC,WCqCfC,qBApCX,SAAAA,EAAYhB,GAAO,IAAAD,EAAA,OAAAkB,OAAAC,EAAA,EAAAD,CAAAd,KAAAa,IAEfjB,EAAAkB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAlB,KAAMH,KAUVsB,SAAW,WACP,IAAMC,EAASxB,EAAKyB,SAASC,QAAQC,aAE/BC,EAAQC,KAAKC,KAAMN,EAAS,IAClCO,QAAQC,IAAIJ,GAEZ5B,EAAKa,SAAS,CAAEe,WAdhB5B,EAAKL,MAAQ,CAAEiC,MAAO,GAEtB5B,EAAKyB,SAAWV,IAAMkB,YANPjC,mFASfI,KAAKqB,SAASC,QAAQQ,iBAAiB,OAAQ9B,KAAKmB,2CAY/C,IAAAY,EACwB/B,KAAKH,MAAMmC,MAAhCC,EADHF,EACGE,YAAaC,EADhBH,EACgBG,KAErB,OACIjC,EAAAC,EAAAC,cAAA,OAAKgC,MAAO,CAAEC,WAAU,QAAAC,OAAUrC,KAAKT,MAAMiC,SACzCvB,EAAAC,EAAAC,cAAA,OACAmC,IAAKtC,KAAKqB,SACVkB,IAAKN,EACLO,IAAKN,EAAKO,kBA9BF9B,IAAMC,YCWf8B,EARG,SAAC7C,GACf,IAAM8C,EAAS9C,EAAM8C,OAAOC,IAAI,SAACZ,GAC7B,OAAO/B,EAAAC,EAAAC,cAAC0C,EAAD,CAAWC,IAAKd,EAAMe,GAAIf,MAAOA,MAG5C,OAAO/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcuC,YCLzBK,WAAMC,OAAO,CAExBC,QAAS,2BACTC,QAAS,CACLC,cAAe,gFCuCRC,6MAnCX9D,MAAQ,CAAEoD,OAAQ,MAGlBW,qDAAiB,SAAAC,EAAO/D,GAAP,IAAAgE,EAAA,OAAAC,EAAAvD,EAAAwD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACQC,EAASC,IAAI,iBAAkB,CACpDC,OAAQ,CAAEC,MAAOzE,KAFJ,OACTgE,EADSG,EAAAO,KAcftE,EAAKa,SAAS,CAAEkC,OAAQa,EAASW,KAAKC,UAdvB,wBAAAT,EAAAU,SAAAd,oIAsBjB,OACItD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe+B,MAAO,CAACmC,UAAW,SAC7CrE,EAAAC,EAAAC,cAACoE,EAAD,CAAWzE,SAAUE,KAAKsD,iBAC1BrD,EAAAC,EAAAC,cAACqE,EAAD,CAAW7B,OAAQ3C,KAAKT,MAAMoD,iBA/BxBhC,IAAMC,WCNxB6D,IAASC,OACTzE,EAAAC,EAAAC,cAACwE,EAAD,MACCC,SAASC,cAAc","file":"static/js/main.46c2d1e6.chunk.js","sourcesContent":["import React from \"react\";\n\nclass SearchBar extends React.Component {\n  state = { term: \"\" };\n  //Made this an arrow function to allow for binding the callback\n  onFormSubmit = event => {\n      event.preventDefault();\n\n      this.props.onSubmit(this.state.term);\n  };\n\n  render() {\n    return (\n      <div className=\"ui segment\">\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\n          <div className=\"field\">\n            <label>Image Search</label>\n            <input\n              type=\"text\"\n              value={this.state.term}\n              onChange={e => this.setState({ term: e.target.value })}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react'\n\nclass ImageCard extends React.Component {\n    constructor(props) {\n        //Must call super on props for any constructor method to initialize this.props\n        super(props);\n\n        this.state = { spans: 0 };\n\n        this.imageRef = React.createRef();\n    }\n    componentDidMount(){\n        this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n\n    setSpans = () => {\n        const height = this.imageRef.current.clientHeight;\n\n        const spans = Math.ceil( height / 10);\n        console.log(spans);\n\n        this.setState({ spans });\n    }\n\n    render() {\n        const { description, urls} = this.props.image;\n\n        return(\n            <div style={{ gridRowEnd: `span ${this.state.spans}`}}>\n                <img \n                ref={this.imageRef}\n                alt={description}\n                src={urls.regular}\n                />\n            </div>\n        );\n    }\n}\n\nexport default ImageCard;","import React from \"react\";\nimport './ImageList.css';\nimport ImageCard from './ImageCard';\n\n\nconst ImageList = (props) => {\n    const images = props.images.map((image) => {\n        return <ImageCard key={image.id} image={image}/>\n    });\n\n    return <div className=\"image-list\">{images}</div>\n};\n\nexport default ImageList;","//We are going to add all the code related to axios and unsplash here so that we do not have it in our \n//app class\n\nimport axios from 'axios';\n\nexport default axios.create({\n//create method allows us to make a customized copy of the axios request\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization: 'Client-ID 5290932eb6600623a22bfb00d2be9433cb1768ca3e0452e87e91b08c5f39fb2a'\n    }\n})","import React from 'react';\n//By convention add libraries you install above things you make\n\n\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\nimport unsplash from '../api/unsplash.js';\n\n\n\nclass App extends React.Component {\n    //We must initialize state so that we can interact with the dom\n    //We know we want an array of images, so lets set state to have an empty array of called images\n    state = { images: [] };\n\n    //We set this onSearchSubmit to be an asynconous arrow function so that we can properly use this in the callback\n    onSearchSubmit = async (term) => {\n      const response = await unsplash.get('/search/photos', {\n        params: { query: term },\n      });\n\n        //We need to  write a notice that has told us that the search is complete\n        //An axios call always returns a promise\n        //We have two options Option 1: Using .then\n        //Chain on a .then function that has an arrow function that will be invoked in the future\n      // }).then( response => {\n      //   //To get the list of images from the whole response we want the .data.results\n        //  console.log(response.data.results);\n     \n\n      this.setState({ images: response.data.results });\n\n      //Option 2: ASYNC AWAIT SYNTAX Adding the Aync to the function (line 13) and make the axios request a const\n      //Add async in front of the method, find what you are waiting to get done and asign it to a variable\n    }\n\n\n    render () {\n    return (\n        <div className=\"ui container\" style={{marginTop: '15px'}}>\n            <SearchBar onSubmit={this.onSearchSubmit}/>\n            <ImageList images={this.state.images}/>\n        </div>\n        );\n    }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n<App />,\n document.querySelector('#root'));\n"],"sourceRoot":""}